-
    version: '7.0.1.{build}'
    os: Visual Studio 2022

    configuration: Release
    platform:
        - x64
    branches:
      only:
        - master

    environment:
        MyProjectDir: C:\projects\genshinimpact-autotrack-dll\
        OpenCvDir: C:\projects\opencv\
        OpenCvUrl: https://github.com/GengGode/OpencvStaticLib/releases/download/4.6.0/Opencv.zip
        ProjectName: cvAutoTrack
        ProJectExeName: cvAutoTrack
    skip_tags: true
  
    install:
        - ps: $env:TIME_STRING=(get-date -UFormat "%Y%m%d%a").ToString()
        # 发布版本号为 APPVEYOR_BUILD_VERSION 去除 {build}
        - ps: $env:APPVEYOR_BUILD_VERSION=$env:APPVEYOR_BUILD_VERSION.split('.')[0..2] -join '.'
        # 显示运行名称和版本号
        - ps: echo %APPVEYOR_BUILD_VERSION% 
        - ps: echo %APPVEYOR_BUILD_WORKER_IMAGE%

        - mkdir %OpenCvDir%
        - appveyor DownloadFile %OpenCvUrl%
        - 7z x ./*.zip -y -o%OpenCvDir%
        - rm -f ./*.zip
        #- dir %OpenCvDir%
        #- dir %OpenCvDir%x64\vc15\staticlib

        - cd %MyProjectDir%\%ProjectName%\
        - 7z x ./resource.rar -y -o%MyProjectDir%\%ProjectName%\
    before_build:
        #- dir  %MyProjectDir%
        #- dir  %OpenCvDir%

    build_script:
        - MSBuild %MyProjectDir%cvAutoTrack\cvAutoTrack.vcxproj /p:configuration="Compile"
        # 编译测试文件
        - MSBuild %MyProjectDir%impl\Cpp\TEST_cvAutoTrack_Cpp\TEST_cvAutoTrack_Cpp.vcxproj /p:configuration="Compile"
        - MSBuild %MyProjectDir%impl\CSharp\TEST_cvAutoTrack_CSharp\TEST_cvAutoTrack_CSharp.csproj /t:restore
        - MSBuild %MyProjectDir%impl\CSharp\TEST_cvAutoTrack_CSharp\TEST_cvAutoTrack_CSharp.csproj /p:configuration="Compile"

    after_build:
        - echo %MyProjectDir%cvAutoTrack.sln 编译完成 等待测试
        - mkdir %MyProjectDir%x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.dll $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.lib $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\include\*.h $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\cvAutoTrackCSharp.cs $env:MyProjectDir\x64\build\
    
        
    before_test:
        # 移动测试文件到test目录
        - mkdir %MyProjectDir%x64\test\
        - cd %MyProjectDir% 
        - ls -R
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.dll $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\Cpp\TEST_cvAutoTrack_Cpp\x64\Compile\*.exe $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.exe $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.dll $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.json $env:MyProjectDir\x64\test\
        
    test_script:
        - cd %MyProjectDir%\x64\test\
        - dir
        # 运行 C++ 测试
        - TEST_cvAutoTrack_Cpp.exe -test
        # 运行 C# 测试
        - TEST_cvAutoTrack_CSharp.exe -test
        
    after_test:
        - cd %MyProjectDir%x64\build\
        - echo %APPVEYOR_BUILD_VERSION% >version.tag
        - md5sum -b %MyProjectDir%x64\build\%ProjectName%.dll | cut -c 2-34 >%ProjectName%.md5
        - 7z a cvautotrack.7z %MyProjectDir%x64\build\*
        - ps: cp -r $env:MyProjectDir\impl\Cpp\TEST_cvAutoTrack_Cpp\x64\Compile\TEST_cvAutoTrack_Cpp.exe $env:MyProjectDir\x64\build\
        
        - appveyor PushArtifact version.tag
        - appveyor PushArtifact %ProjectName%.md5
        - appveyor PushArtifact cvAutoTrack.7z
        - appveyor PushArtifact TEST_cvAutoTrack_Cpp.exe


    #artifacts:
        #- path: build/Release
        #artifacts path name must be appveyor API
  
    deploy:
        - provider: GitHub
          description: '$(APPVEYOR_PROJECT_SLUG): cvAutoTrack Dll $(APPVEYOR_BUILD_VERSION).$(APPVEYOR_BUILD_NUMBER)' 
          auth_token:
             secure: G/Fzf0bGIhqqt+XvsC5AXrZVNs3atGU7XCzJxqiUZEwOxoZrjxk87ENI/OitnXCo
          draft: false
          tag: $(APPVEYOR_BUILD_VERSION)
          force_update: true
          on:  
            APPVEYOR_REPO_TAG: false

    notifications:
      - provider: Email
        to:
          - ysx20201030@163.com
          - aymb00@126.com
        subject: '{{status}}: {{projectName}} {{buildVersion}}'                  # optional
        message: "<h1>Build</h1>
                    <h2>{{projectName}} {{status}}</h2>
                        <p>{{buildVersion}}: {{buildUrl}}</p>
                   <H1>Commit</h1> 
                    <h3>#{{commitId}} by {{commitAuthor}} on {{commitDate}}</h3><h2> {{commitMessage}}</h2>"    # optional
        on_build_success: true
        on_build_failure: false
        on_build_status_changed: false
-
    version: '7.0.0.{build}'
    os: Visual Studio 2022
    configuration: Dev
    platform:
        - x64
    branches:
      only:
        - /dev-/

    environment:
        MyProjectDir: C:\projects\genshinimpact-autotrack-dll\
        OpenCvDir: C:\projects\opencv\
        OpenCvUrl: https://github.com/GengGode/OpencvStaticLib/releases/download/4.6.0/Opencv.zip
        ProjectName: cvAutoTrack
        ProJectExeName: cvAutoTrack
    skip_tags: true
  
    install:
        - ps: $env:TIME_STRING=(get-date -UFormat "%Y%m%d%a").ToString()
        # 发布版本号为 APPVEYOR_BUILD_VERSION 去除 {build}
        - ps: $env:APPVEYOR_BUILD_VERSION=$env:APPVEYOR_BUILD_VERSION.split('.')[0..2] -join '.'
        # 显示运行名称和版本号
        - ps: echo %APPVEYOR_BUILD_VERSION% 
        - ps: echo %APPVEYOR_BUILD_WORKER_IMAGE%
        

        - mkdir %OpenCvDir%
        - appveyor DownloadFile %OpenCvUrl%
        - 7z x ./*.zip -y -o%OpenCvDir%
        - rm -f ./*.zip

        - cd %MyProjectDir%\%ProjectName%\
        - 7z x ./resource.rar -y -o%MyProjectDir%\%ProjectName%\
        
    build_script:
        - MSBuild %MyProjectDir%cvAutoTrack\cvAutoTrack.vcxproj /p:configuration="Compile"
        # 编译测试文件
        - MSBuild %MyProjectDir%impl\Cpp\TEST_cvAutoTrack_Cpp\TEST_cvAutoTrack_Cpp.vcxproj /p:configuration="Compile"
        - MSBuild %MyProjectDir%impl\CSharp\TEST_cvAutoTrack_CSharp\TEST_cvAutoTrack_CSharp.csproj /t:restore
        - MSBuild %MyProjectDir%impl\CSharp\TEST_cvAutoTrack_CSharp\TEST_cvAutoTrack_CSharp.csproj /p:configuration="Compile"
        
    after_build:
        - echo %MyProjectDir%cvAutoTrack.sln 编译完成 等待测试
        - mkdir %MyProjectDir%x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.dll $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.lib $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\include\*.h $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\cvAutoTrackCSharp.cs $env:MyProjectDir\x64\build\
    
        
    before_test:
        # 移动测试文件到test目录
        - mkdir %MyProjectDir%x64\test\
        - cd %MyProjectDir% 
        - ls -R
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.dll $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\Cpp\TEST_cvAutoTrack_Cpp\x64\Compile\*.exe $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.exe $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.dll $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.json $env:MyProjectDir\x64\test\
        
    test_script:
        - cd %MyProjectDir%\x64\test\
        - dir
        # 运行 C++ 测试
        - TEST_cvAutoTrack_Cpp.exe -test
        # 运行 C# 测试
        - TEST_cvAutoTrack_CSharp.exe -test
        
    after_test:
        - cd %MyProjectDir%x64\build\
        - echo %APPVEYOR_BUILD_VERSION% >version.tag
        - md5sum -b %MyProjectDir%x64\build\%ProjectName%.dll | cut -c 2-34 >%ProjectName%.md5
        - 7z a cvautotrack.7z %MyProjectDir%x64\build\*
        - ps: cp -r $env:MyProjectDir\impl\Cpp\TEST_cvAutoTrack_Cpp\x64\Compile\TEST_cvAutoTrack_Cpp.exe $env:MyProjectDir\x64\build\
        
        - appveyor PushArtifact version.tag
        - appveyor PushArtifact %ProjectName%.md5
        - appveyor PushArtifact cvAutoTrack.7z
        - appveyor PushArtifact TEST_cvAutoTrack_Cpp.exe

    deploy:
        - provider: GitHub
          description: '$(APPVEYOR_PROJECT_SLUG): DEV cvAutoTrack Dll $(APPVEYOR_BUILD_VERSION).$(APPVEYOR_BUILD_NUMBER)' 
          auth_token:
             secure: G/Fzf0bGIhqqt+XvsC5AXrZVNs3atGU7XCzJxqiUZEwOxoZrjxk87ENI/OitnXCo
          draft: true
          tag: Dev-$(APPVEYOR_BUILD_VERSION)
          force_update: true
          on:  
            APPVEYOR_REPO_TAG: false

    notifications:
      - provider: Email
        to:
          - ysx20201030@163.com
          - aymb00@126.com
        subject: '{{status}}: {{projectName}} {{buildVersion}}'                  # optional
        message: "<h1>Build</h1>
                    <h2>{{projectName}} {{status}}</h2>
                        <p>{{buildVersion}}: {{buildUrl}}</p>
                   <H1>Commit</h1> 
                    <h3>#{{commitId}} by {{commitAuthor}} on {{commitDate}}</h3><h2> {{commitMessage}}</h2>"    # optional
        on_build_success: true
        on_build_failure: false
        on_build_status_changed: false
-
    version: '7.0.0.{build}'
    os: Visual Studio 2022
    configuration: Fix
    platform:
        - x64
    branches:
      only:
        - /fix-/

    environment:
        MyProjectDir: C:\projects\genshinimpact-autotrack-dll\
        OpenCvDir: C:\projects\opencv\
        OpenCvUrl: https://github.com/GengGode/OpencvStaticLib/releases/download/4.6.0/Opencv.zip
        ProjectName: cvAutoTrack
        ProJectExeName: cvAutoTrack
    skip_tags: true
  
    install:
        - ps: $env:TIME_STRING=(get-date -UFormat "%Y%m%d%a").ToString()

        - mkdir %OpenCvDir%
        - appveyor DownloadFile %OpenCvUrl%
        - 7z x ./*.zip -y -o%OpenCvDir%
        - rm -f ./*.zip

        - cd %MyProjectDir%\%ProjectName%\
        - 7z x ./resource.rar -y -o%MyProjectDir%\%ProjectName%\
        
    build_script:
        - MSBuild %MyProjectDir%cvAutoTrack\cvAutoTrack.vcxproj /p:configuration="Compile"
        # 编译测试文件
        - MSBuild %MyProjectDir%impl\Cpp\TEST_cvAutoTrack_Cpp\TEST_cvAutoTrack_Cpp.vcxproj /p:configuration="Compile"
        - MSBuild %MyProjectDir%impl\CSharp\TEST_cvAutoTrack_CSharp\TEST_cvAutoTrack_CSharp.csproj /t:restore
        - MSBuild %MyProjectDir%impl\CSharp\TEST_cvAutoTrack_CSharp\TEST_cvAutoTrack_CSharp.csproj /p:configuration="Compile"
        
    after_build:
        - echo %MyProjectDir%cvAutoTrack.sln 编译完成 等待测试
        - mkdir %MyProjectDir%x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.dll $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.lib $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\include\*.h $env:MyProjectDir\x64\build\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\cvAutoTrackCSharp.cs $env:MyProjectDir\x64\build\
    
        
    before_test:
        # 移动测试文件到test目录
        - mkdir %MyProjectDir%x64\test\
        - cd %MyProjectDir% 
        - ls -R
        - ps: cp -r $env:MyProjectDir\cvAutoTrack\x64\Compile\*.dll $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\Cpp\TEST_cvAutoTrack_Cpp\x64\Compile\*.exe $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.exe $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.dll $env:MyProjectDir\x64\test\
        - ps: cp -r $env:MyProjectDir\impl\CSharp\TEST_cvAutoTrack_CSharp\bin\x64\Compile\net6.0\*.json $env:MyProjectDir\x64\test\
        
    test_script:
        - cd %MyProjectDir%\x64\test\
        - dir
        # 运行 C++ 测试
        - TEST_cvAutoTrack_Cpp.exe -test
        # 运行 C# 测试
        - TEST_cvAutoTrack_CSharp.exe -test
        